{
  "en": {
    "titan-control-slide-1": "Титан-Контроль — уникальный «облачный» сервис<br><br>Мы работали в стандартной по размеру команде: <br>1 Тим-лид<br>1 Project менеджер <br>3 Backend разработчика <br>1 Frontend разработчика <br>2 QA тестировщика<br>1 Дизайнер<br>1 DevOps<br><br>",
    "titan-control-slide-2": "Я был ответственен за разработку REST API на стеке Python / Django / DRF<br>В процессе работы приходилось коммуницировать с различными членами команды для достижения наилучшего результата. <br><br>На самых ранних этапах я внедрил версионирование в архитектуру API что помогло в дальнейшем мобильным разработчикам, когда мы перешли на вторую версию.",
    "titan-control-slide-3": "Когда мы подходили к старту разработки второй версии, я так же инициировал внедрение автоматизированного тестирования, что в дальнейшем помимо удобства миграции с первой на вторую версию так же принесло пользу во время процесса сертификации.<br><br>В процессе вывода проекта в прод я ресерчил тему нагрузочного тестирования, но к сожалению заказчик торопил.  Это вылилось в проблему, проект не выдержал нагрузки и мы были вынуждены в течении недели работать над исправлением проблем производительности “на живую”.",
    "titan-control-slide-4": "В конечном итоге мы с командой решили все возникшие проблемы, баги и прочие трудности. <br><br>Проект занял III на конкурсе транспортной безопасности срди таких конкурентов как аэропорт домодедово и центр транспортной безопасности.  "
  },
  "ru": {
    "titan-control-slide-1": "Титан-Контроль — уникальный «облачный» сервис<br><br>Мы работали в стандартной по размеру команде: <br>1 Тим-лид<br>1 Project менеджер <br>3 Backend разработчика <br>1 Frontend разработчик <br>2 QA тестировщика<br>1 Дизайнер<br>1 DevOps<br><br>",
    "titan-control-slide-2": "Я был ответственен за разработку REST API на стеке Python / Django / DRF<br>В процессе работы приходилось коммуницировать с различными членами команды для достижения наилучшего результата. <br><br>На самых ранних этапах я внедрил версионирование в архитектуру API что помогло в дальнейшем мобильным разработчикам, когда мы перешли на вторую версию.",
    "titan-control-slide-3": "Когда мы начинали разрабатывать вторую версию, я инициировал внедрение автоматизированного тестирования. В дальнейшем, помимо удобства разработки правок и внедрения нового функционала, это принесло пользу во время прохождения процесса сертификации.",
    "titan-control-slide-4": "В конечном итоге мы с командой решили все возникшие проблемы, баги и прочие трудности. <br><br>Проект занял III место в конкурсе транспортной безопасности серди таких конкурентов как аэропорт Домодедово и центр транспортной безопасности.  ",

    "prodlogistica-slide-1": "Мобильное приложение для менеджеров по закупкам в компании Продлогистика ЮГ <br><br>Проект по автоматизации бизнес-процесса приема заявок на поставку. <br><br>До автоматизации менеджерам приходилось записывать заказы \"на коленке\" при звонках от клиентов и затем передавать их операторам 1С по телефону. <br><br>",
    "prodlogistica-slide-2": "Под моим руководством небольшая команда из трех человек разработала мобильное приложение, которое позволило менеджерам, создавать заказы, искать продукты и отправлять их напрямую в базу 1С.",
    "prodlogistica-slide-3": "Для настройки быстрого и гибкого поиска была внедрена промежуточная NoSql база данных ElasticSearch<br><br>Бекенд Django / DRF / Celery / Redis<br><br>Инеграция с 1C FastAPI /  Winapi (COM/OLE) <br>",
    "prodlogistica-slide-4": "В итоге мобильное приложение было настроено и установлено на планшеты сотрудников.",

    "tend-manager-slide-1": "TendManager - это первый мой проект который принес финансовую пользу для компании<br><br>Его основная задача - повышение производительности и автоматизация рутинных процессов на рабочем месте менеджера тендерного отдела. <br>",
    "tend-manager-slide-2": "Приложение написано на PyQt5 <br>Главное окно можно закрепить либо слева либо справа по середине экрана.<br><br>При наведении курсора мыши на край синей полоски окно немного выезжало по оси X, это позволяло одновременно работать с тендерной платформой такой как SBIS.<br><br>Само окно представляет из себя форму.<br>Слева прикрепляемые документы, справа вводные данные закупки",
    "tend-manager-slide-3": "В приложении была разработана гибкая система настройки тендерных проектов.<br><br>Возможность назначить собственные переменные, для шаблонизации документов. <br><br>По умолчанию тендерный проект представляет из себя расчетный файл, структуру заполненных документов-шаблонов, различные декларации и файл “Заявка на поставку”<br><br>Все эти документы прикладываются в разном составе в зависимости от различных условий<br>",
    "tend-manager-slide-4": "Самая рутинная и трудная часть работы - обработка заявки на поставку. Этот документ нужно заполнить по определенным правилам, для того что бы пройти на следующий этап тендерного аукциона.<br><br>Для частичной автоматизации этого процесса было разработано две версии валидатора. В конечном итоге производительность обработки тендерных проектов выросла до 50% на одного сотрудника. <br><br>По данному проекту была написана и успешно защищена дипломная работа.",
    "tend-manager-slide-5": "Самая рутинная и трудная часть работы - обработка заявки на поставку. Этот документ нужно заполнить по определенным правилам, для того что бы пройти на следующий этап тендерного аукциона.<br><br>Для частичной автоматизации этого процесса было разработано две версии валидатора. В конечном итоге производительность обработки тендерных проектов выросла до 50% на одного сотрудника. <br><br>По данному проекту была написана и успешно защищена дипломная работа."
  }
}
